// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  role        String
  tickets     Ticket[]     @relation("UserTickets")
  permissions Permission[]
  Manager     Manager?     @relation(fields: [managerId], references: [id])
  managerId   Int?
}

model Permission {
  id     Int    @id @default(autoincrement())
  email  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  access String
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String
  tickets   Ticket[] @relation("TagTickets")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id             Int      @id @default(autoincrement())
  name           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  value          Float
  description    String
  assigned       User?    @relation("UserTickets", fields: [assignedUserId], references: [id])
  assignedUserId Int?
  tags           Tag[]    @relation("TagTickets")
}

model Invitation {
  id        Int     @id @default(autoincrement())
  email     String
  manager   Manager @relation(fields: [managerId], references: [id])
  managerId Int
  status    String
  role      String
}

model Manager {
  id           Int          @id @default(autoincrement())
  name         String
  companyEmail String       @unique
  companyPhone String
  address      String
  city         String
  state        String
  country      String
  users        User[] // Assuming User is another model you might have
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  invitations  Invitation[]
}
